{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Social Kit","text":"<p>Beautiful UI Kit for soical like apps.</p>"},{"location":"#widgets","title":"Widgets","text":""},{"location":"#wavecarouselentry","title":"WaveCarouselEntry","text":"<ul> <li>This displays an entry style widget. It does not have a scaffold. Meaning you can add it in a screen if you want.</li> <li> <p>It is best fit on mobile size.</p> </li> <li> <p><code>logo</code> is a widget that is displayed at the center-left. You can put whatever widget there.</p> </li> <li> <p><code>background</code> is a widget to put as a background. Or the background will be the background color of the theme.</p> </li> <li> <p><code>bottomStroke</code> is the width of the bottom line at the bottom of photos. Ex: 5</p> </li> <li> <p><code>bottomStrokeColor</code> is the color of <code>bottomStroke</code>. Ex: Colors.blue</p> </li> <li> <p><code>start</code> is the button at the very bottom to display \"CONTINUE\" OR \"GET STARTED\".</p> </li> <li> <p><code>autoSwipleInterval</code> is the interval in ms to swipe next slide. It must be bigger than 100 to activate the auto swipe.</p> </li> <li> <p><code>items</code> is an array that has the title, subtitle and the photo to display in the carousel.</p> </li> <li> <p><code>titleSpacing</code> is the spacing between <code>title</code> and <code>subtitle</code>.</p> </li> <li> <p><code>bottomGradient</code> is a widget that displays a graide at the bottom of the photos. Since it is a widget, you can put whatever UI as the <code>bottomGraident</code>.</p> </li> <li> <p><code>indicatorColor</code> is the color of inactive pagination indicator.</p> </li> <li><code>indicatorActiveColor</code> is the color of active pagination indicator.</li> </ul>"},{"location":"#sleep-walker","title":"Sleep Walker","text":"<ul> <li> <p>You can move around a widget in a stack. It is useful to give some decoration under the stack.</p> </li> <li> <p>The speed of the each move is set by the starting point of the <code>duration</code>. Meaning, the speed of the current position to next position is depends on the <code>duration</code> of the current position. So, the last <code>duration</code> is ignored.</p> </li> </ul> <pre><code>import 'package:flutter/material.dart';\nimport 'package:social_kit/social_kit.dart';\n\nclass SleepWalkerScreen extends StatefulWidget {\n  static const String routeName = '/SleepWalker';\n  const SleepWalkerScreen({super.key});\n\n  @override\n  State&lt;SleepWalkerScreen&gt; createState() =&gt; _SleepWalkerScreenState();\n}\n\nclass _SleepWalkerScreenState extends State&lt;SleepWalkerScreen&gt; {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: const Text('SleepWalker'),\n      ),\n      body: Stack(\n        children: [\n          const Text(\"SleepWalker\"),\n          SleepWalker(\n            alignments: const [\n              (\n                alignment: Alignment.topLeft,\n                duration: Duration(milliseconds: 2000),\n              ),\n              (\n                alignment: Alignment.topRight,\n                duration: Duration(milliseconds: 700),\n              ),\n              (\n                alignment: Alignment.bottomRight,\n                duration: Duration(milliseconds: 400),\n              ),\n              (\n                alignment: Alignment.bottomLeft,\n                duration: Duration(milliseconds: 300),\n              ),\n              (\n                alignment: Alignment(.7, .2),\n                duration: Duration(milliseconds: 200),\n              ),\n              (\n                alignment: Alignment(-1, -1),\n                duration: Duration(seconds: 1),\n              ),\n            ],\n            child: Container(\n              width: 200,\n              height: 200,\n              color: Colors.blue,\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n</code></pre> <ul> <li>Use case; You may add a background that moves in a screen. Add a child widget that has some blurred shapes and rotatation.</li> </ul>"},{"location":"#combination-of-wavecarouselentry-and-sleepwalker","title":"Combination of WaveCarouselEntry and SleepWalker","text":"<ul> <li>You can give a decoration of SleepWalker to the background of WaveCarouselEntry.</li> </ul> <pre><code>import 'package:cached_network_image/cached_network_image.dart';\nimport 'package:flutter/material.dart';\nimport 'package:social_kit/social_kit.dart';\n\nclass EntryScreen extends StatefulWidget {\n  static const String routeName = '/Entry';\n  const EntryScreen({super.key});\n\n  @override\n  State&lt;EntryScreen&gt; createState() =&gt; _EntryScreenState();\n}\n\nclass _EntryScreenState extends State&lt;EntryScreen&gt; {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      body: WaveCarouselEntry(\n        autoSwipeInterval: 3000,\n        bottomStroke: 8,\n        bottomStrokeColor: Colors.grey,\n        titleSpacing: 16,\n        start: ElevatedButton(\n          onPressed: () {\n            Navigator.pop(context);\n          },\n          child: const Text('CONTINUE'),\n        ),\n        logo: Container(\n          width: 72,\n          height: 72,\n          decoration: const BoxDecoration(\n            shape: BoxShape.circle,\n            color: Color(0xFFffe1f1),\n          ),\n          child: ClipOval(\n            child: CachedNetworkImage(\n              imageUrl: 'https://picsum.photos/250/?image=400',\n              fit: BoxFit.cover,\n            ),\n          ),\n        ),\n        items: [\n          (\n            title: Text(\n              \"Casual Talk\",\n              style: Theme.of(context).textTheme.titleLarge,\n            ),\n            subtitle: Text(\n              \"Please join casual and enjoyable conversations with potential matches using our meeting app. Easily connect and chat.\",\n              style: Theme.of(context).textTheme.labelMedium!.copyWith(\n                    color: Colors.grey,\n                    fontWeight: FontWeight.w400,\n                  ),\n              textAlign: TextAlign.center,\n            ),\n            image: CachedNetworkImage(\n              imageUrl: 'https://picsum.photos/250?image=90',\n              fit: BoxFit.cover,\n            ),\n          ),\n          (\n            title: Text(\n              \"Extends Social Circle\",\n              style: Theme.of(context).textTheme.titleLarge,\n            ),\n            subtitle: Text(\n              \"Discover interesting individuals to connect with. Our meeting app makes it easy to broaden your horizons and meet diverse people.\",\n              style: Theme.of(context).textTheme.labelMedium!.copyWith(\n                    color: Colors.grey,\n                    fontWeight: FontWeight.w400,\n                  ),\n              textAlign: TextAlign.center,\n            ),\n            image: CachedNetworkImage(\n              imageUrl: 'https://picsum.photos/250?image=100',\n              fit: BoxFit.cover,\n            ),\n          ),\n          (\n            title: Text(\n              \"Discover New Connections\",\n              style: Theme.of(context).textTheme.titleLarge,\n            ),\n            subtitle: Text(\n              \"Our meeting app is designed to help you find new connections and expand your social circle. Join us and meet new people.\",\n              style: Theme.of(context).textTheme.labelMedium!.copyWith(\n                    color: Colors.grey,\n                    fontWeight: FontWeight.w400,\n                  ),\n              textAlign: TextAlign.center,\n            ),\n            image: CachedNetworkImage(\n              imageUrl: 'https://picsum.photos/250?image=110',\n              fit: BoxFit.cover,\n            ),\n          ),\n          (\n            title: Text(\n              \"Meaningful Connections\",\n              style: Theme.of(context).textTheme.titleLarge,\n            ),\n            subtitle: Text(\n              \"Create meaningful connections through honest conversations. Our app fosters a friendly and welcoming environment for meeting potential partners.\",\n              style: Theme.of(context).textTheme.labelMedium!.copyWith(\n                    color: Colors.grey,\n                    fontWeight: FontWeight.w400,\n                  ),\n              textAlign: TextAlign.center,\n            ),\n            image: CachedNetworkImage(\n              imageUrl: 'https://picsum.photos/250?image=120',\n              fit: BoxFit.cover,\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n</code></pre> <pre><code>import 'dart:math';\n\nimport 'package:flutter/material.dart';\nimport 'package:flutter_animate/flutter_animate.dart';\n\nclass EntryBackground extends StatelessWidget {\n  const EntryBackground({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    return SizedBox(\n      width: 196,\n      height: 196,\n      child: Stack(\n        children: [\n          // Center, Red\n          Positioned(\n            top: 80,\n            left: 50,\n            child: Transform(\n              alignment: Alignment.topRight,\n              transform: Matrix4.rotationZ(pi / 12), // rotateZ(-pi / 12.0),\n              child: Container(\n                width: 99.88,\n                height: 99.88,\n                decoration: ShapeDecoration(\n                  color: Colors.red.withAlpha(1),\n                  shape: const StarBorder.polygon(\n                    sides: 3,\n                    pointRounding: 0.5,\n                  ),\n                  shadows: [\n                    BoxShadow(\n                      color: Colors.red.shade900.withAlpha(71),\n                      blurRadius: 384.4,\n                      spreadRadius: 0.1,\n                    ),\n                  ],\n                ),\n              ).animate().fade().scale().rotate().then().rotate(\n                    delay: .4.seconds,\n                    duration: 2300.seconds,\n                    begin: 100,\n                    end: 0,\n                  ),\n            ),\n          ),\n          //Top, Orange\n          Positioned(\n            top: 0,\n            left: 30,\n            child: Transform(\n              alignment: Alignment.topRight,\n              transform: Matrix4.rotationZ(-pi / 7), // rotateZ(-pi / 12.0),\n              child: Container(\n                width: 99.88,\n                height: 99.88,\n                decoration: ShapeDecoration(\n                  color: Colors.orange.withAlpha(1),\n                  shape: const StarBorder.polygon(\n                    sides: 3,\n                    pointRounding: 0.5,\n                  ),\n                  shadows: [\n                    BoxShadow(\n                      color: Colors.orange.shade900.withAlpha(71),\n                      blurRadius: 384.4,\n                      spreadRadius: 0.1,\n                    ),\n                  ],\n                ),\n              ).animate().fade().scale().rotate().then().rotate(\n                    delay: .4.seconds,\n                    duration: 6000.seconds,\n                    begin: 0,\n                    end: 100,\n                  ),\n            ),\n          ),\n\n          /// Bottom, Blue\n          Positioned(\n            top: 90,\n            left: 50,\n            child: Transform(\n              alignment: Alignment.topRight,\n              transform: Matrix4.rotationZ(-pi / 5), // rotateZ(-pi / 12.0),\n              child: Container(\n                width: 99.88,\n                height: 99.88,\n                decoration: ShapeDecoration(\n                  color: Colors.blue.withAlpha(1),\n                  shape: const StarBorder.polygon(\n                    sides: 3,\n                    pointRounding: .9,\n                  ),\n                  shadows: [\n                    BoxShadow(\n                      color: Colors.blue.shade900.withAlpha(71),\n                      blurRadius: 384.4,\n                      spreadRadius: 12,\n                    ),\n                  ],\n                ),\n              ).animate().fade().scale().rotate().then().rotate(\n                    delay: .4.seconds,\n                    duration: 1900.seconds,\n                    begin: 0,\n                    end: 100,\n                  ),\n            ),\n          ),\n        ],\n      ).animate().rotate().scale().then().rotate(\n            delay: .4.seconds,\n            duration: 1900.seconds,\n            begin: 100,\n            end: 0,\n          ),\n    );\n  }\n}\n</code></pre>"},{"location":"#basiccarouselentry","title":"BasicCarouselEntry","text":"<p>Most of the options are similiar to <code>WaveCarouselEntry</code> except there is no <code>logo</code> in <code>BasicCarouselEntry</code>.</p>"},{"location":"#roundcarouselentry","title":"RoundCarouselEntry","text":"<ul> <li> <p><code>startTitle</code> is a widget to display on top of the <code>start</code> button. You may display a copyright or guideline.</p> </li> <li> <p>Other options are similar to <code>WaveCarouselEntry</code> except there is no <code>logo</code> option.</p> </li> </ul>"},{"location":"#cardlistview","title":"CardListView","text":"<ul> <li> <p><code>CardListView</code> is a card with list items.</p> </li> <li> <p><code>divider</code> will display a Divider. By default it is <code>SizedBox(height: 7)</code>. You can pass it <code>null</code> to not display the divider.</p> </li> </ul> Before applying theme After applying theme <pre><code>CardListView(\n  textStyle: Theme.of(context).textTheme.bodySmall,\n  items: [\n    CardListTile(\n      label: 'My profile',\n      trailing: const Icon(\n        Icons.person,\n        size: 20,\n      ),\n      onTap: () {\n        ScaffoldMessenger.of(context).showSnackBar(\n          const SnackBar(\n            content: Text('My profile'),\n          ),\n        );\n      },\n    ),\n    CardListTile(\n      label: 'View my public profile',\n      trailing: const Icon(\n        Icons.lock_open,\n        size: 20,\n      ),\n      onTap: () {\n        ScaffoldMessenger.of(context).showSnackBar(\n          const SnackBar(\n            content: Text('View my public profile'),\n          ),\n        );\n      },\n    ),\n    CardListTile(\n      label: 'Whatever menu you like',\n      trailing: const Icon(\n        Icons.whatshot,\n        size: 20,\n      ),\n      onTap: () {\n        ScaffoldMessenger.of(context).showSnackBar(\n          const SnackBar(\n            content: Text('Whatever menu you like'),\n          ),\n        );\n      },\n    ),\n  ],\n),\n</code></pre>"},{"location":"#settings-ui","title":"Settings UI","text":"<p>You can use <code>CardListView</code> as the UI in setting screen. See the source code of settings.screen.dart in the example.</p> <p></p>"},{"location":"#theme-design","title":"Theme Design","text":"<p>See Theme Design for details.</p>"},{"location":"#glance-of-theme-settings","title":"Glance of Theme Settings","text":"<p>Sometimes it can be helpful to see at a glance how the theme of the current app (the app you are developing) is set. Copy the code below and paste it in your app. You will see the theme settings like TextTheme or ColorTheme. It is recommended to capture the screen during the development work and save it somewhere where you can quickly refer to it.</p> <pre><code>ElevatedButton(\n  onPressed: () {\n    showGeneralDialog(\n      context: context,\n      pageBuilder: (_, __, ___) =&gt; const ThemeScreen(),\n    );\n  },\n  child: const Text(\"Color theme\"),\n)\n</code></pre>"},{"location":"carousel_entry/","title":"Carousel Entry","text":""},{"location":"carousel_entry/#basic-carousel-entry","title":"Basic Carousel Entry","text":"<p>Below is a complete example of <code>BasicCarouselEntry</code>.</p> <pre><code>import 'package:flutter/material.dart';\nimport 'package:go_router/go_router.dart';\nimport 'package:silvers/defines/terms.dart';\nimport 'package:silvers/global.dart';\nimport 'package:silvers/screens/entry/phone_number_login.screen.dart';\nimport 'package:social_kit/social_kit.dart';\n\nclass EntryScreen extends StatelessWidget {\n  static const String routeName = '/Entry';\n  const EntryScreen({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    final subtitleStyle = Theme.of(context).textTheme.labelMedium!.copyWith(\n          color: Colors.grey.shade700,\n          fontWeight: FontWeight.w400,\n          height: 1.5,\n        );\n    return Scaffold(\n      body: BasicCarouselEntry(\n        autoSwipeInterval: 3000,\n        titleSpacing: 16,\n        bottomStroke: 2,\n        bottomStrokeColor: Colors.grey.shade300,\n        bottomGradient: const SizedBox.shrink(),\n        indicatorActiveColor: Colors.indigo,\n        indicatorColor: Colors.grey,\n        start: ElevatedButton(\n          onPressed: () async {\n            final re = await showGeneralDialog&lt;bool?&gt;(\n                context: context,\n                pageBuilder: (context, _, __) {\n                  return SafeArea(\n                    child: Padding(\n                      padding: const EdgeInsets.all(xl),\n                      child: Scaffold(\n                        body: Padding(\n                          padding: const EdgeInsets.all(lg),\n                          child: Column(\n                            crossAxisAlignment: CrossAxisAlignment.start,\n                            children: [\n                              Text(\n                                '\uc2e4\ubc84\uc2a4 \uac00\uc785\uc57d\uad00',\n                                style: context.titleLarge,\n                              ),\n                              const Divider(\n                                height: 32,\n                              ),\n                              const Expanded(\n                                child: SingleChildScrollView(\n                                  child: Text(termsAndConditions),\n                                ),\n                              ),\n                              const Divider(),\n                              Row(\n                                children: [\n                                  TextButton(\n                                    onPressed: () =&gt; context.pop(false),\n                                    child: const Text('\ub2eb\uae30'),\n                                  ),\n                                  const Spacer(),\n                                  TextButton(\n                                    onPressed: () =&gt; context.pop(true),\n                                    child: const Text('\ub3d9\uc758\ud569\ub2c8\ub2e4.'),\n                                  ),\n                                ],\n                              )\n                            ],\n                          ),\n                        ),\n                      ),\n                    ),\n                  );\n                });\n            if (re == true &amp;&amp; context.mounted) {\n              showGeneralDialog(\n                context: context,\n                pageBuilder: ($, $$, $$$) =&gt; const PhoneNumberLoginScreen(),\n              );\n            }\n          },\n          child: const Text('     \uc2dc\uc791\ud558\uae30     '),\n        ),\n        items: [\n          (\n            title: Text(\n              \"\uc778\uc0dd\uc740 60\ubd80\ud130\uac00 \uc7ac\ubbf8\uc788\uc8e0\",\n              style: Theme.of(context).textTheme.titleLarge,\n            ),\n            subtitle: Text(\n              \"\uc990\uac81\uace0 \ud589\ubcf5\ud55c\\n\uc911\uc7a5\ub144\uce35 \uc628&amp;\uc624\ud504\ub77c\uc778 \ucee4\ubba4\ub2c8\ud2f0\",\n              style: subtitleStyle,\n              textAlign: TextAlign.center,\n            ),\n            image: Image.asset(\n              'assets/images/entry/0.webp',\n              fit: BoxFit.cover,\n              color: Colors.black.withOpacity(0.5),\n              colorBlendMode: BlendMode.dstOver,\n            ),\n          ),\n          (\n            title: Text(\n              \"\uc2dc\ub2c8\uc5b4 \ucee4\ubba4\ud2f0\ub2c8\",\n              style: Theme.of(context).textTheme.titleLarge,\n            ),\n            subtitle: Text(\n              \"\uc2dc\ub2c8\uc5b4 \uc18c\uc15c \ucee4\ubba4\ub2c8\ud2f0? \ub9d0\uc774 \uc880 \uc5b4\ub835\uc8e0\\n\uadf8\ub0e5 \uc778\uc5f0\uc744 \ub9cc\ub098\ub294 \uacf3\uc774\uc5d0\uc694.\",\n              style: subtitleStyle,\n              textAlign: TextAlign.center,\n            ),\n            image: Image.asset(\n              'assets/images/entry/1.webp',\n              fit: BoxFit.cover,\n            ),\n          ),\n          (\n            title: Text(\n              \"\uc740\ud1f4 \ud6c4 \uc790\uae30 \uac1c\ubc1c\",\n              style: Theme.of(context).textTheme.titleLarge,\n            ),\n            subtitle: Text(\n              \"\uc774\uc81c \uc2dc\uc791\uc785\ub2c8\ub2e4. \ucee4\ubba4\ub2c8\ud2f0\ub97c \ud1b5\ud574 \uc0c8\ub85c\uc6b4 \ucde8\ubbf8, \uacf5\ubd80, \uc778\uc5f0\uc744 \ub9cc\ub098\ubcf4\uc138\uc694.\",\n              style: subtitleStyle,\n              textAlign: TextAlign.center,\n            ),\n            image: Image.asset(\n              'assets/images/entry/2.webp',\n              fit: BoxFit.cover,\n            ),\n          ),\n          (\n            title: Text(\n              \"\ucc44\ud305\uc774 \uc544\ub2cc \uc2e4\uc81c \ub9cc\ub0a8\",\n              style: Theme.of(context).textTheme.titleLarge,\n            ),\n            subtitle: Text(\n              \"\uc778\uc0dd \uc9e7\uc8e0. \uc6b0\ub9ac\ub294 \uc9c4\uc9dc \ub9cc\ub0a9\ub2c8\ub2e4.\\n\ucee4\ubba4\ub2c8\ud2f0\uc5d0\uc11c \uce5c\uad6c\uac00 \ub418\uace0 \uc9c1\uc811 \ub9cc\ub098 \uc990\uac81\uace0 \ud589\ubcf5\ud55c \uc778\uc5f0\uc744 \ub9cc\ub4dc\uc138\uc694.\",\n              style: subtitleStyle,\n              textAlign: TextAlign.center,\n            ),\n            image: Image.asset(\n              'assets/images/entry/3.webp',\n              fit: BoxFit.cover,\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n</code></pre>"},{"location":"extensions/","title":"Extensions","text":""},{"location":"extensions/#buildcontext-extensions","title":"BuildContext Extensions","text":"<ul> <li><code>isNarrow</code> is to know if the mobile screen is narrow like iPhone SE.</li> <li><code>isWide</code> is to know if the mobile screen is wide like table or iPad.</li> </ul>"},{"location":"extensions/#string-extensions","title":"String Extensions","text":"<ul> <li><code>tryInt</code></li> <li><code>tryDouble</code></li> <li><code>isEmail</code></li> <li><code>ifEmpty</code></li> <li><code>or</code></li> <li><code>orNull</code></li> <li><code>upTo</code></li> <li><code>cut</code></li> <li><code>replace</code></li> <li><code>hasUrl</code></li> <li><code>sanitize</code></li> <li><code>dateTime</code></li> <li><code>Ymd</code></li> <li><code>ymd</code></li> <li><code>YmdHms</code></li> <li><code>YmdHm</code></li> <li><code>md</code></li> <li><code>his</code></li> <li><code>isNullOrEmpty</code></li> </ul>"},{"location":"theme/","title":"Theme Design","text":"<p>There are three themes that comes with SocialKit. You can develop your own theme. And if you do, please share with us.</p>"},{"location":"theme/#comictheme","title":"comicTheme","text":"<p>This is an opinionated comic book style theme.</p> <ul> <li>If you want to override the comic theme, you can try something like below.</li> </ul> <pre><code>import 'package:flutter/material.dart';\nimport 'package:social_kit/social_kit.dart';\nimport 'package:social_kit_example/router.dart';\n\nvoid main() {\n  runApp(const MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  const MyApp({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp.router(\n      routerConfig: router,\n      theme: comicTheme(context: context).copyWith(\n        elevatedButtonTheme: ElevatedButtonThemeData(\n          style: ElevatedButton.styleFrom(\n            foregroundColor: comicTheme(context: context).colorScheme.secondary,\n            backgroundColor:\n                comicTheme(context: context).colorScheme.background,\n            elevation: 0,\n            side: BorderSide(\n              color: comicTheme(context: context).colorScheme.secondary,\n              width: 1.8,\n            ),\n            shape: RoundedRectangleBorder(\n              borderRadius: BorderRadius.circular(16.16),\n            ),\n            textStyle: Theme.of(context).textTheme.bodyMedium?.copyWith(\n                  fontWeight: FontWeight.w500,\n                  letterSpacing: 1,\n                ),\n          ),\n        ),\n      ),\n    );\n  }\n}\n</code></pre>"},{"location":"theme/#sleektheme","title":"sleekTheme","text":"<p>This is another opinionated theme design. You can simply apply it in your theme setting.</p>"},{"location":"theme/#flattheme","title":"flatTheme","text":"<p>This is the flat theme that do more on flat style design. By default, flat theme has no border. It is supposed to draw the boundary with background. But if you want, you can override the theme and add your own border.</p>"},{"location":"theme/#themedatabigelevatedbutton","title":"themeDataBigElevatedButton","text":"<p>This is a function that returns a theme data to make the ElevatedButton wide and big.</p>"},{"location":"theme/#themedataelevatedbuttontolisttile","title":"themeDataElevatedButtonToListTile","text":"<p>This is a function that returns a theme data to make the ElevatedButton look like to ListTile.</p>"},{"location":"theme/#customizing-existing-theme","title":"Customizing existing theme","text":"<p>There may be many ways of customizing themes. Below may be one of the way of customing the theme.</p> <pre><code>sliverTextTheme({required BuildContext context}) =&gt; TextTheme(\n      bodyLarge: Theme.of(context).textTheme.bodyLarge?.copyWith(\n            fontSize: 19,\n            fontWeight: FontWeight.w300,\n          ),\n      bodyMedium: Theme.of(context).textTheme.bodyLarge?.copyWith(\n            fontSize: 17,\n            fontWeight: FontWeight.w300,\n          ),\n      bodySmall: Theme.of(context).textTheme.bodyLarge?.copyWith(\n            fontSize: 15,\n            fontWeight: FontWeight.w300,\n          ),\n      labelLarge: Theme.of(context).textTheme.bodyLarge?.copyWith(\n            fontSize: 15,\n            fontWeight: FontWeight.w500,\n          ),\n      labelMedium: Theme.of(context).textTheme.bodyLarge?.copyWith(\n            fontSize: 14,\n            fontWeight: FontWeight.w300,\n          ),\n      labelSmall: Theme.of(context).textTheme.bodyLarge?.copyWith(\n            fontSize: 13,\n            fontWeight: FontWeight.w300,\n          ),\n    );\nMaterialApp(\n    theme: comicTheme(context: context).copyWith(\n        textTheme: sliverTextTheme(context: context),\n    ),\n</code></pre> <p>There might be times that you may wonder how to apply color(s) while theming in MaterialApp. You can apply your own color scheme like below.</p> <pre><code>final colorScheme = ColorScheme.fromSeed(seedColor: Colors.green);\n@override\nWidget build(BuildContext context) {\nreturn MaterialApp.router(\n    theme: comicTheme(context: context, colorScheme: colorScheme).copyWith(\n    tabBarTheme: Theme.of(context).tabBarTheme.copyWith(\n            labelColor: colorScheme.primary, // &lt;-- Here. Don't use Theme.of(context).colorScheme.primary\n        ),\n    ),\n);\n}\n</code></pre>"}]}